<?xml version="1.0" encoding="UTF-8"?>
<project name="jcompilo" default="build">

    <property name="build.number" value="dev.build"/>
    <property name="build" value="${basedir}/build"/>
    <property name="artifacts" value="${build}/artifacts"/>
    <property name="reports" value="${artifacts}/reports"/>
    <property name="src" value="${basedir}/src"/>
    <property name="plugin.src" value="${basedir}/intellij-plugin/src"/>
    <property name="test" value="${basedir}/test"/>
    <property name="group.id" value="com.googlecode.${ant.project.name}"/>
    <property name="release.version" value="${build.number}"/>
    <property name="release.name" value="${ant.project.name}-${release.version}"/>
    <property name="release.jar" value="${release.name}.jar"/>
    <property name="release.sh" value="${release.name}.sh"/>
    <property name="release.cmd" value="${release.name}.cmd"/>
    <property name="release.plugin.jar" value="${ant.project.name}-intellij-${release.version}.jar"/>
    <property name="release.plugin.zip" value="${ant.project.name}-intellij-${release.version}.zip"/>
    <property name="release.pom" value="${release.name}.pom"/>
    <property name="release.src" value="${release.name}-sources.jar"/>
    <property name="release.dep" value="${release.name}-dep.jar"/>
    <property name="release.dep.path" value="${artifacts}/${release.name}-dep.jar"/>
    <property name="release.jar.path" value="${artifacts}/${release.jar}"/>
    <property name="release.plugin.jar.path" value="${artifacts}/${release.plugin.jar}"/>
    <property name="release.plugin.zip.path" value="${artifacts}/${release.plugin.zip}"/>
    <property name="test.jar.path" value="${artifacts}/${release.name}.test.jar"/>
    <property name="build.dependencies.dir" value="lib/build"/>
    <property name="runtime.dependencies.dir" value="lib/runtime"/>
    <property name="optional.dependencies.dir" value="lib/optional"/>

    <import file="${build}/macros.xml"/>
    <import file="${build}/shavenmaven.xml"/>

    <requires java.version="1\.[8]"/>

    <path id="all.dependancies">
        <fileset dir="${build.dependencies.dir}" includes="**/*.jar"/>
        <fileset dir="${runtime.dependencies.dir}" includes="*.jar"/>
        <fileset dir="${optional.dependencies.dir}" includes="*.jar"/>
    </path>

    <path id="all.jars">
        <path refid="all.dependancies"/>
        <path path="${release.jar.path}"/>
        <path path="${test.jar.path}"/>
    </path>

    <target name="update">
        <install version="2.3"/>
        <parallel>
            <update dependencies="build/build.dependencies"
                    directory="${build.dependencies.dir}"/>
            <update dependencies="build/runtime.dependencies"
                    directory="${runtime.dependencies.dir}"/>
            <update dependencies="build/optional.dependencies"
                    directory="${optional.dependencies.dir}"/>
        </parallel>
    </target>

    <target name="clean" description="cleanup all">
        <delete dir="${artifacts}"/>
    </target>

    <target name="compile">
        <compile.and.jar src="${src}" jar="${release.jar.path}" classpathref="all.dependancies"
                         version="${release.version}" main.class="com.googlecode.jcompilo.BootStrap"/>
    </target>

    <target name="plugin">
        <path id="plugin.path">
            <fileset id="plugin.fileset" dir="${build.dependencies.dir}">
                <include name="totallylazy*.jar"/>
                <include name="yadic*.jar"/>
                <include name="shavenmaven*.jar"/>
                <include name="asm*.jar"/>
                <exclude name="*-sources.jar"/>
            </fileset>
        </path>

        <pathconvert property="plugin.libs" pathsep=";">
            <path refid="plugin.path"/>
            <flattenmapper/>
        </pathconvert>

        <compile.and.jar src="${plugin.src}" jar="${release.plugin.jar.path}" classpathref="all.jars"
                         version="${release.version}"/>

        <copy file="${plugin.src}/META-INF/plugin.xml" tofile="${artifacts}/plugin.xml"/>
        <replaceregexp file="${artifacts}/plugin.xml"
                       match='classpath\=\"[^\"]+\"'
                       replace='classpath="${plugin.libs}"' />
        <replace file="${artifacts}/plugin.xml"
                 token="dev.build"
                 value="${build.number}"/>

        <zip destfile="${release.plugin.zip.path}">
            <zipfileset file="${artifacts}/plugin.xml" prefix="jcompilo/META-INF"/>
            <zipfileset src="${release.plugin.jar.path}" prefix="jcompilo/classes"/>
            <zipfileset src="${release.dep.path}" prefix="jcompilo/classes"/>
            <zipfileset refid="plugin.fileset" prefix="jcompilo/lib" />
        </zip>

    </target>

    <target name="test">
        <compile.and.jar src="${test}" jar="${test.jar.path}" classpathref="all.jars"
                         version="${release.version}" main.class="com.googlecode.jcompilo.BootStrap"/>
        <test jar="${test.jar.path}" classpathref="all.jars" reports="${reports}"/>
    </target>

    <target name="package">
        <mkdir dir="${artifacts}"/>

        <zip destfile="${artifacts}/${release.src}" basedir="src"/>

        <copy file="${basedir}/example/jcompilo.sh" tofile="${artifacts}/${release.sh}">
            <filterset>
                <filter token="version" value="${build.number}"/>
            </filterset>
        </copy>

        <copy file="${basedir}/example/jcompilo.cmd" tofile="${artifacts}/${release.cmd}">
            <filterset>
                <filter token="version" value="${build.number}"/>
            </filterset>
        </copy>

        <exec executable="git" output="${artifacts}/commit.properties" error="${artifacts}/commit.error">
	        <arg line='log -n 1 --pretty=format:"user:%an%ndate:%aD%nsummary:%s%nchangeset:%H"'/>
	    </exec>
        <property file="${artifacts}/commit.properties" prefix="commit"/>

        <propertyfile file="${artifacts}/release.properties">
            <entry key="commit.user" value="${commit.user}"/>
            <entry key="commit.summary" value="${commit.summary}"/>
            <entry key="commit.date" value="${commit.date}"/>
            <entry key="commit.changeset" value="${commit.changeset}"/>
            <entry key="release.version" value="${release.version}"/>
            <entry key="project.name" value="${ant.project.name}"/>
            <entry key="release.name" value="${release.name}"/>
            <entry key="release.path" value="com/googlecode/${ant.project.name}/${ant.project.name}/${release.version}/"/>
            <entry key="release.files" value="${release.jar},${release.pom},${release.src}"/>
            <entry key="${release.jar}.description" value="${commit.summary} build:${build.number} "/>
            <entry key="${release.jar}.labels" value="Jar"/>
            <entry key="${release.pom}.description" value="Maven POM file build:${build.number}"/>
            <entry key="${release.pom}.labels" value="POM"/>
            <entry key="${release.src}.description" value="Source file build:${build.number}"/>
            <entry key="${release.src}.labels" value="Source"/>
        </propertyfile>

        <generate.pom artifact.uri="mvn:${group.id}:${ant.project.name}:jar:${release.version}"
                             dependencies="build/runtime.dependencies"
                             directory="${artifacts}"/>
    </target>

    <target name="embed">
        <embed.libs/>
    </target>

    <target name="build" description="build all">
        <parallel>
           <antcall target="update"/>
           <antcall target="clean"/>
        </parallel>
        <antcall target="compile"/>
        <parallel>
            <antcall target="test"/>
            <antcall target="package"/>
        </parallel>
        <antcall target="embed"/>
        <antcall target="plugin"/>
    </target>
</project>
